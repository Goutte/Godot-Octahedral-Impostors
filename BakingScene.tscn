[gd_scene load_steps=15 format=2]

[ext_resource path="res://materials/shaders/ImpostorShader.shader" type="Shader" id=1]
[ext_resource path="res://export_images/norm_depth.png" type="Texture" id=2]
[ext_resource path="res://export_images/base.png" type="Texture" id=3]
[ext_resource path="res://env_test.tres" type="Environment" id=4]
[ext_resource path="res://export_images/orm.png" type="Texture" id=5]
[ext_resource path="res://scripts/main_view_camera.gd" type="Script" id=11]
[ext_resource path="res://assets/tree_v2/tree_v2.tscn" type="PackedScene" id=13]
[ext_resource path="res://scripts/camera_octahedral.gd" type="Script" id=14]

[sub_resource type="QuadMesh" id=1]

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/imposterFrames = Vector2( 16, 16 )
shader_param/positionOffset = Vector3( 0, -0.023, 0 )
shader_param/isFullSphere = false
shader_param/isTransparent = false
shader_param/alpha_clamp = 0.602
shader_param/scale = 0.762
shader_param/depth_scale = 0.05
shader_param/normalmap_depth = 0.5
shader_param/imposterBaseTexture = ExtResource( 3 )
shader_param/imposterNormalDepthTexture = ExtResource( 2 )
shader_param/imposterORMTexture = ExtResource( 5 )

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_alpha_prepass, cull_back, diffuse_burley, specular_schlick_ggx;
uniform vec3 offset= vec3(0);
uniform float depth_scaler = 1f;
void vertex() {
  POSITION = vec4(VERTEX + offset, 1.0);
}

void fragment() {
  float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
  vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
  vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
  view.xyz /= view.w;
  float linear_depth = -view.z;
  //for ortho camera depth texture shold be linear ?
  depth = clamp(depth,0,1);
  //via log
  //depth += 1.0f; //range 1-2
  //depth *= 4.0f; //range 1-8
  //depth = log2(depth)/3.0;
  ALBEDO = vec3(1f - clamp(depth,0,1));
  //ALBEDO = vec3(linear_depth);
}
"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/offset = Vector3( 0, 0, -1 )
shader_param/depth_scaler = 1.0

[sub_resource type="QuadMesh" id=5]
material = SubResource( 4 )
size = Vector2( 2, 2 )

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0.243137, 0.235294, 0.282353, 0.545098 )

[node name="TestScene" type="Spatial"]

[node name="Impostor" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.744141 )
visible = false
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="ViewportBaking" type="Viewport" parent="."]
size = Vector2( 1024, 1024 )
transparent_bg = true
handle_input_locally = false
msaa = 4
debug_draw = 1
render_target_update_mode = 3

[node name="BakedContainer" type="Spatial" parent="ViewportBaking"]

[node name="tree_v2" parent="ViewportBaking/BakedContainer" instance=ExtResource( 13 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.416, 0 )

[node name="Camera" type="Camera" parent="ViewportBaking"]
projection = 1
current = true
size = 1.5
near = 0.01
far = 4.0
script = ExtResource( 14 )
is_full_sphere = false
is_standard_shader = true

[node name="DepthPostProcess" type="MeshInstance" parent="ViewportBaking/Camera"]
visible = false
cast_shadow = 0
extra_cull_margin = 16384.0
mesh = SubResource( 5 )
material/0 = null

[node name="Panel" type="Panel" parent="."]
anchor_bottom = 1.0
margin_right = 200.0
margin_bottom = 6.10352e-05
rect_min_size = Vector2( 200, 0 )
custom_styles/panel = SubResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="container" type="VBoxContainer" parent="Panel"]
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 4.0
margin_right = 190.0
margin_bottom = 202.0
custom_constants/separation = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="Panel/container"]
margin_right = 193.0
margin_bottom = 20.0
text = "Generate"

[node name="progress" type="ProgressBar" parent="Panel/container"]
margin_top = 26.0
margin_right = 193.0
margin_bottom = 40.0
max_value = 1.0

[node name="HBoxContainer" type="HBoxContainer" parent="Panel/container"]
margin_top = 46.0
margin_right = 193.0
margin_bottom = 70.0

[node name="Label" type="Label" parent="Panel/container/HBoxContainer"]
margin_top = 5.0
margin_right = 115.0
margin_bottom = 19.0
size_flags_horizontal = 3
text = "Camera size"

[node name="SpinBox" type="SpinBox" parent="Panel/container/HBoxContainer"]
margin_left = 119.0
margin_right = 193.0
margin_bottom = 24.0
step = 0.01
value = 1.0
allow_greater = true

[node name="HBoxContainer3" type="HBoxContainer" parent="Panel/container"]
margin_top = 76.0
margin_right = 193.0
margin_bottom = 100.0

[node name="Label4" type="Label" parent="Panel/container/HBoxContainer3"]
margin_top = 5.0
margin_right = 115.0
margin_bottom = 19.0
size_flags_horizontal = 3
text = "Grid size"

[node name="SpinBoxGridSize" type="SpinBox" parent="Panel/container/HBoxContainer3"]
margin_left = 119.0
margin_right = 193.0
margin_bottom = 24.0
min_value = 1.0
value = 16.0

[node name="HBoxContainer2" type="HBoxContainer" parent="Panel/container"]
margin_top = 106.0
margin_right = 193.0
margin_bottom = 126.0

[node name="Label2" type="Label" parent="Panel/container/HBoxContainer2"]
margin_top = 3.0
margin_right = 128.0
margin_bottom = 17.0
size_flags_horizontal = 3
text = "Image Resolution"

[node name="OptionButtonImgRes" type="OptionButton" parent="Panel/container/HBoxContainer2"]
margin_left = 132.0
margin_right = 193.0
margin_bottom = 20.0
text = "4096"
items = [ "1024", null, false, 1, null, "2048", null, false, 2, null, "4096", null, false, 3, null, "8192", null, false, 4, null ]
selected = 2

[node name="HBoxContainer4" type="HBoxContainer" parent="Panel/container"]
margin_top = 132.0
margin_right = 193.0
margin_bottom = 156.0

[node name="Label2" type="Label" parent="Panel/container/HBoxContainer4"]
margin_top = 5.0
margin_right = 165.0
margin_bottom = 19.0
size_flags_horizontal = 3
text = "Use full sphere"

[node name="CheckboxFullSphere" type="CheckBox" parent="Panel/container/HBoxContainer4"]
margin_left = 169.0
margin_right = 193.0
margin_bottom = 24.0

[node name="HBoxContainer5" type="HBoxContainer" parent="Panel/container"]
margin_top = 162.0
margin_right = 193.0
margin_bottom = 186.0

[node name="Label3" type="Label" parent="Panel/container/HBoxContainer5"]
margin_top = 5.0
margin_right = 165.0
margin_bottom = 19.0
size_flags_horizontal = 3
text = "Generate Standard Shader"

[node name="CheckboxDepth" type="CheckBox" parent="Panel/container/HBoxContainer5"]
margin_left = 169.0
margin_right = 193.0
margin_bottom = 24.0
pressed = true

[node name="HBoxContainer6" type="HBoxContainer" parent="Panel/container"]
margin_top = 192.0
margin_right = 193.0
margin_bottom = 216.0

[node name="Label" type="Label" parent="Panel/container/HBoxContainer6"]
margin_top = 5.0
margin_right = 165.0
margin_bottom = 19.0
size_flags_horizontal = 3
text = "Export as packed scene"

[node name="CheckBoxPackedScene" type="CheckBox" parent="Panel/container/HBoxContainer6"]
margin_left = 169.0
margin_right = 193.0
margin_bottom = 24.0
pressed = true

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 4 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1 )
visible = false
projection = 1
far = 2.0
script = ExtResource( 11 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.225622, 0.427503, -0.875406, 0.50602, 0.716429, 0.480285, 0.832489, -0.551336, -0.0546831, -0.911007, 1.27492, 1.34433 )
editor_only = true
[connection signal="pressed" from="Panel/container/Button" to="ViewportBaking/Camera" method="_on_Button_pressed"]
[connection signal="value_changed" from="Panel/container/HBoxContainer/SpinBox" to="Camera" method="_on_SpinBox_value_changed"]
[connection signal="value_changed" from="Panel/container/HBoxContainer/SpinBox" to="ViewportBaking/Camera" method="_on_SpinBox_value_changed"]
[connection signal="value_changed" from="Panel/container/HBoxContainer3/SpinBoxGridSize" to="ViewportBaking/Camera" method="_on_SpinBoxGridSize_value_changed"]
[connection signal="item_selected" from="Panel/container/HBoxContainer2/OptionButtonImgRes" to="ViewportBaking/Camera" method="_on_OptionButtonImgRes_item_selected"]
[connection signal="toggled" from="Panel/container/HBoxContainer4/CheckboxFullSphere" to="ViewportBaking/Camera" method="_on_CheckboxFullSphere_toggled"]
[connection signal="toggled" from="Panel/container/HBoxContainer5/CheckboxDepth" to="ViewportBaking/Camera" method="_on_CheckboxDepth_toggled"]
[connection signal="toggled" from="Panel/container/HBoxContainer6/CheckBoxPackedScene" to="ViewportBaking/Camera" method="_on_CheckBoxPackedScene_toggled"]
